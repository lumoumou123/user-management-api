{
 "Resources": {
  "UserPool6BA7E5F2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "Schema": [
     {
      "Mutable": true,
      "Name": "email",
      "Required": true
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "UserManagementPool",
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserPool/Resource"
   }
  },
  "UserPoolClient2F5918F7": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "profile",
     "phone",
     "email",
     "openid",
     "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
     "https://example.com"
    ],
    "GenerateSecret": false,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserPoolClient/Resource"
   }
  },
  "ItemTable276B2AC8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "partition_key",
      "AttributeType": "S"
     },
     {
      "AttributeName": "sort_key",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "partition_key",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "sort_key",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/ItemTable/Resource"
   }
  },
  "ItemLambdaServiceRole6E4F6B4B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/ItemLambda/ServiceRole/Resource"
   }
  },
  "ItemLambdaServiceRoleDefaultPolicy247662AD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ItemTable276B2AC8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ItemLambdaServiceRoleDefaultPolicy247662AD",
    "Roles": [
     {
      "Ref": "ItemLambdaServiceRole6E4F6B4B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/ItemLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ItemLambdaB9B2602D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "716ad7593865a9a0775a5237e435aad9c340ff17dbbaba8f8d2cc7fb49ea41df.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "ItemTable276B2AC8"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ItemLambdaServiceRole6E4F6B4B",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "ItemLambdaServiceRoleDefaultPolicy247662AD",
    "ItemLambdaServiceRole6E4F6B4B"
   ],
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/ItemLambda/Resource",
    "aws:asset:path": "asset.716ad7593865a9a0775a5237e435aad9c340ff17dbbaba8f8d2cc7fb49ea41df",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "UserApiB6C12381": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "UserApi"
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Resource"
   }
  },
  "UserApiCloudWatchRoleCD3B20A5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/CloudWatchRole/Resource"
   }
  },
  "UserApiAccount52C5A50A": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "UserApiCloudWatchRoleCD3B20A5",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "UserApiB6C12381"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Account"
   }
  },
  "UserApiDeployment248398117fd07dee2ecc78a97971811492827279": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "UserApiB6C12381"
    }
   },
   "DependsOn": [
    "UserApiitemspartitionkeysortkeyPUTC28D9A7B",
    "UserApiitemspartitionkeysortkey10C9562A",
    "UserApiitemspartitionkeysortkeytranslationGETF59387AF",
    "UserApiitemspartitionkeysortkeytranslationDF10B0BD",
    "UserApiitemspartitionkeyGETE60153E4",
    "UserApiitemspartitionkey385B7628",
    "UserApiitemsPOST3F95B2C3",
    "UserApiitems2EE043FC"
   ],
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Deployment/Resource"
   }
  },
  "UserApiDeploymentStageprod08A07725": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "UserApiDeployment248398117fd07dee2ecc78a97971811492827279"
    },
    "RestApiId": {
     "Ref": "UserApiB6C12381"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "UserApiAccount52C5A50A"
   ],
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/DeploymentStage.prod/Resource"
   }
  },
  "UserApiitems2EE043FC": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "UserApiB6C12381",
      "RootResourceId"
     ]
    },
    "PathPart": "items",
    "RestApiId": {
     "Ref": "UserApiB6C12381"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/Resource"
   }
  },
  "UserApiitemsPOSTApiPermissionUserManagementApiStackUserApiD537B602POSTitems0ECED01D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ItemLambdaB9B2602D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UserApiB6C12381"
       },
       "/",
       {
        "Ref": "UserApiDeploymentStageprod08A07725"
       },
       "/POST/items"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/POST/ApiPermission.UserManagementApiStackUserApiD537B602.POST..items"
   }
  },
  "UserApiitemsPOSTApiPermissionTestUserManagementApiStackUserApiD537B602POSTitems93DCB34A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ItemLambdaB9B2602D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UserApiB6C12381"
       },
       "/test-invoke-stage/POST/items"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/POST/ApiPermission.Test.UserManagementApiStackUserApiD537B602.POST..items"
   }
  },
  "UserApiitemsPOST3F95B2C3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ItemLambdaB9B2602D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UserApiitems2EE043FC"
    },
    "RestApiId": {
     "Ref": "UserApiB6C12381"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/POST/Resource"
   }
  },
  "UserApiitemspartitionkey385B7628": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "UserApiitems2EE043FC"
    },
    "PathPart": "{partition_key}",
    "RestApiId": {
     "Ref": "UserApiB6C12381"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/{partition_key}/Resource"
   }
  },
  "UserApiitemspartitionkeyGETApiPermissionUserManagementApiStackUserApiD537B602GETitemspartitionkeyF99C6377": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ItemLambdaB9B2602D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UserApiB6C12381"
       },
       "/",
       {
        "Ref": "UserApiDeploymentStageprod08A07725"
       },
       "/GET/items/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/{partition_key}/GET/ApiPermission.UserManagementApiStackUserApiD537B602.GET..items.{partition_key}"
   }
  },
  "UserApiitemspartitionkeyGETApiPermissionTestUserManagementApiStackUserApiD537B602GETitemspartitionkey7111635A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ItemLambdaB9B2602D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UserApiB6C12381"
       },
       "/test-invoke-stage/GET/items/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/{partition_key}/GET/ApiPermission.Test.UserManagementApiStackUserApiD537B602.GET..items.{partition_key}"
   }
  },
  "UserApiitemspartitionkeyGETE60153E4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ItemLambdaB9B2602D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UserApiitemspartitionkey385B7628"
    },
    "RestApiId": {
     "Ref": "UserApiB6C12381"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/{partition_key}/GET/Resource"
   }
  },
  "UserApiitemspartitionkeysortkey10C9562A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "UserApiitemspartitionkey385B7628"
    },
    "PathPart": "{sort_key}",
    "RestApiId": {
     "Ref": "UserApiB6C12381"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/{partition_key}/{sort_key}/Resource"
   }
  },
  "UserApiitemspartitionkeysortkeyPUTApiPermissionUserManagementApiStackUserApiD537B602PUTitemspartitionkeysortkeyB09A56C6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ItemLambdaB9B2602D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UserApiB6C12381"
       },
       "/",
       {
        "Ref": "UserApiDeploymentStageprod08A07725"
       },
       "/PUT/items/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/{partition_key}/{sort_key}/PUT/ApiPermission.UserManagementApiStackUserApiD537B602.PUT..items.{partition_key}.{sort_key}"
   }
  },
  "UserApiitemspartitionkeysortkeyPUTApiPermissionTestUserManagementApiStackUserApiD537B602PUTitemspartitionkeysortkeyFFE35B09": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ItemLambdaB9B2602D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UserApiB6C12381"
       },
       "/test-invoke-stage/PUT/items/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/{partition_key}/{sort_key}/PUT/ApiPermission.Test.UserManagementApiStackUserApiD537B602.PUT..items.{partition_key}.{sort_key}"
   }
  },
  "UserApiitemspartitionkeysortkeyPUTC28D9A7B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ItemLambdaB9B2602D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UserApiitemspartitionkeysortkey10C9562A"
    },
    "RestApiId": {
     "Ref": "UserApiB6C12381"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/{partition_key}/{sort_key}/PUT/Resource"
   }
  },
  "UserApiitemspartitionkeysortkeytranslationDF10B0BD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "UserApiitemspartitionkeysortkey10C9562A"
    },
    "PathPart": "translation",
    "RestApiId": {
     "Ref": "UserApiB6C12381"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/{partition_key}/{sort_key}/translation/Resource"
   }
  },
  "UserApiitemspartitionkeysortkeytranslationGETApiPermissionUserManagementApiStackUserApiD537B602GETitemspartitionkeysortkeytranslation8AAF42B1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ItemLambdaB9B2602D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UserApiB6C12381"
       },
       "/",
       {
        "Ref": "UserApiDeploymentStageprod08A07725"
       },
       "/GET/items/*/*/translation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/{partition_key}/{sort_key}/translation/GET/ApiPermission.UserManagementApiStackUserApiD537B602.GET..items.{partition_key}.{sort_key}.translation"
   }
  },
  "UserApiitemspartitionkeysortkeytranslationGETApiPermissionTestUserManagementApiStackUserApiD537B602GETitemspartitionkeysortkeytranslation8A59554F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ItemLambdaB9B2602D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UserApiB6C12381"
       },
       "/test-invoke-stage/GET/items/*/*/translation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/{partition_key}/{sort_key}/translation/GET/ApiPermission.Test.UserManagementApiStackUserApiD537B602.GET..items.{partition_key}.{sort_key}.translation"
   }
  },
  "UserApiitemspartitionkeysortkeytranslationGETF59387AF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ItemLambdaB9B2602D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UserApiitemspartitionkeysortkeytranslationDF10B0BD"
    },
    "RestApiId": {
     "Ref": "UserApiB6C12381"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/UserApi/Default/items/{partition_key}/{sort_key}/translation/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02PT0/DMAzFPwv3zOwPEly3IW6IqYPz5KameEuTqnaYqirfHTXd2E7vZ/v5yV7C4uUJFg94lpmtTjPHJQx7RXsyeJbDYEPtWQMMX0LdLgRntt/+n6+wdUxe70dTJ5mq99iEqoThE0tHoyVDMg6bskIY3qK3ysGPo3veUdewCAefDGMDQxGm/ay74Nj22ZcpGVkdUIRUYD2KkRVsoj2RblDIYMs1Kp2xh6Eg0XXLOeuGa2tD9GpeqXWhby7/3FV7xTofMEFBEmJnKcdfi0vmxO+kP6EaWxOldPPlG8cg9vXo+IjaRk3Gh4rgKI+/yzksnmH+cBTmWRe9ckNQTPoHEfJ7a7UBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "UserManagementApiStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "UserApiEndpoint22DD5314": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "UserApiB6C12381"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "UserApiDeploymentStageprod08A07725"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}